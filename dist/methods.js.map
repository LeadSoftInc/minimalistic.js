{"version":3,"sources":["../src/methods.js"],"names":["required","isEmail","isNumber","isTextAndSpace","length","maxFileSize","isTrue","isFalse","value","Reg","RegExp","test","count","maxSize","file","size","Boolean"],"mappings":";;;;;QAIgBA,Q,GAAAA,Q;QAQAC,O,GAAAA,O;QAUAC,Q,GAAAA,Q;QASAC,c,GAAAA,c;QASAC,M,GAAAA,M;QAQAC,W,GAAAA,W;QAQAC,M,GAAAA,M;QAQAC,O,GAAAA,O;AAhEhB;;;;AAIO,SAASP,QAAT,CAAkBQ,KAAlB,EAAyB;AAC5B,SAAOA,MAAMJ,MAAN,KAAiB,CAAxB;AACH;;AAED;;;;AAIO,SAASH,OAAT,CAAiBO,KAAjB,EAAwB;AAC3B;AACA,MAAMC,MAAM,IAAIC,MAAJ,CAAW,wJAAX,CAAZ;AACA,SAAO,CAACD,IAAIE,IAAJ,CAASH,KAAT,CAAR;AACH;;AAED;;;;AAIO,SAASN,QAAT,CAAkBM,KAAlB,EAAyB;AAC5B,MAAMC,MAAM,IAAIC,MAAJ,CAAW,OAAX,CAAZ;AACA,SAAO,CAACD,IAAIE,IAAJ,CAASH,KAAT,CAAR;AACH;;AAED;;;;AAIO,SAASL,cAAT,CAAwBK,KAAxB,EAA+B;AAClC,MAAMC,MAAM,IAAIC,MAAJ,CAAW,eAAX,CAAZ;AACA,SAAO,CAACD,IAAIE,IAAJ,CAASH,KAAT,CAAR;AACH;;AAED;;;;AAIO,SAASJ,MAAT,CAAgBQ,KAAhB,EAAuB;AAC1B,SAAO;AAAA,WAASJ,MAAMJ,MAAN,IAAgBQ,KAAzB;AAAA,GAAP;AACH;;AAED;;;;AAIO,SAASP,WAAT,CAAqBQ,OAArB,EAA8B;AACjC,SAAO;AAAA,WAAQC,KAAKC,IAAL,IAAaF,OAArB;AAAA,GAAP;AACH;;AAED;;;;AAIO,SAASP,MAAT,CAAgBE,KAAhB,EAAuB;AAC1B,SAAOQ,QAAQR,KAAR,MAAmB,IAA1B;AACH;;AAED;;;;AAIO,SAASD,OAAT,CAAiBC,KAAjB,EAAwB;AAC3B,SAAOQ,QAAQR,KAAR,MAAmB,KAA1B;AACH","file":"methods.js","sourcesContent":["/**\n * @param value\n * @returns {boolean}\n */\nexport function required(value) {\n    return value.length === 0;\n}\n\n/**\n * @param value\n * @returns {boolean}\n */\nexport function isEmail(value) {\n    // eslint-disable-next-line no-useless-escape\n    const Reg = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    return !Reg.test(value);\n}\n\n/**\n * @param value\n * @returns {boolean}\n */\nexport function isNumber(value) {\n    const Reg = new RegExp(/^\\d+$/);\n    return !Reg.test(value);\n}\n\n/**\n * @param value\n * @returns {boolean}\n */\nexport function isTextAndSpace(value) {\n    const Reg = new RegExp(/^[a-zA-Z\\s]*$/);\n    return !Reg.test(value);\n}\n\n/**\n * @param count\n * @return {function(*): boolean}\n */\nexport function length(count) {\n    return value => value.length >= count;\n}\n\n/**\n * @param maxSize\n * @return {function(*): boolean}\n */\nexport function maxFileSize(maxSize) {\n    return file => file.size >= maxSize;\n}\n\n/**\n * @param value\n * @return {boolean}\n */\nexport function isTrue(value) {\n    return Boolean(value) !== true;\n}\n\n/**\n * @param value\n * @return {boolean}\n */\nexport function isFalse(value) {\n    return Boolean(value) !== false;\n}\n"]}